{"version":3,"mappings":"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","names":["FINGER_TIPS","KNUCKLES","LETTER_MAPPINGS","debugGestureMapping","ALL_GESTURES","gestureKey","letter","fingerTipIndex","knuckleIndex","fingerName","getFingerName","knuckleName","getKnuckleName","thumbRingMCP","getGestureKey","thumbPinkyMCP","getLetterForGesture","SPECIAL_MAPPINGS","GESTURE_MAPPINGS","key","isValidGesture","getFingerTipIndices","getKnuckleIndices","Camera","videoElement","options","constraints","resolve","reject","error","processFrame","track","device","deviceId","format","quality","canvas","ctx","permission","PerformanceMonitor","now","currentFps","runningTime","frameTimes","i","average","b","min","max","variance","acc","time","avgFps","frameDropRatio","recommendations","grade","frameStats","rec","SnapshotManager","app","container","header","description","controls","clearAllBtn","exportBtn","videoOnlyBtn","overlayBtn","grid","mainContainer","snapshot","timestamp","tempCanvas","tempCtx","debugDiv","dataUrl","removed","finalGrid","card","performanceGrade","gradeColor","snapshotType","typeColor","downloadBtn","link","id","s","modal","content","closeBtn","e","perf","exportData","blob","url","a","GestureDetector","config","newConfig","workerCode","landmarks","currentTime","distanceResults","fingerTips","knuckles","results","fingerTip","knuckle","dx","dy","dz","distance","bestGesture","shortestDistance","sortedResults","validTouches","result","touches","closePairs","cutoffTime","gesture","HandGestureTypingSystem","__vitePreload","gestureMappings","module","FilesetResolver","HandLandmarker","DrawingUtils","startTimeMs","handCenter","handIsStable","landmark","controlsDiv","toggleBtn","sensitivityDiv","slider","valueDisplay","debugBtn","snapshotContainer","snapshotBtn","event","menu","option1","option2","option","removeMenu","item","debugInfo","pair","isActive","startX","startY","endX","endY","ratio","color","midX","midY","detection","wrist","middleMCP","fps","debugText","overlay","message","className","context","imageData","sum","warningDiv","showStartupMessage","statusElement","checkSystemCompatibility","issues","isCompatible","permissionStatus","checkCameraPermissions","browserInfo","getBrowserInfo","checkPerformanceCapabilities","checkNetworkConnectivity","generateRecommendations","userAgent","name","isUnsupported","isMobile","isLowEnd","start","controller","timeoutId","issue","initApp","compatibility","setupKeyboardShortcuts","addKeyboardShortcutsHelp","helpDiv"],"ignoreList":[],"sources":["../../src/config/gestureMappings.js","../../src/utils/Camera.js","../../src/utils/PerformanceMonitor.js","../../src/utils/SnapshotManager.js","../../src/utils/GestureDetector.js","../../src/components/HandGestureTypingSystem.js","../../src/utils/systemCheck.js","../../src/main.js"],"sourcesContent":["// src/config/gestureMappings.js\n// Constants for hand landmarks (MediaPipe provides 21 landmarks per hand)\n\nexport const FINGER_TIPS = {\n    THUMB: 4,\n    INDEX: 8,\n    MIDDLE: 12,\n    RING: 16,\n    PINKY: 20\n}\n\nexport const KNUCKLES = {\n    THUMB_CMC: 1,     // Thumb Carpometacarpal\n    THUMB_MCP: 2,     // Thumb Metacarpophalangeal\n    THUMB_IP: 3,      // Thumb Interphalangeal\n    INDEX_MCP: 5,     // Index Metacarpophalangeal\n    INDEX_PIP: 6,     // Index Proximal Interphalangeal\n    INDEX_DIP: 7,     // Index Distal Interphalangeal\n    MIDDLE_MCP: 9,    // Middle Metacarpophalangeal\n    MIDDLE_PIP: 10,   // Middle Proximal Interphalangeal\n    MIDDLE_DIP: 11,   // Middle Distal Interphalangeal\n    RING_MCP: 13,     // Ring Metacarpophalangeal\n    RING_PIP: 14,     // Ring Proximal Interphalangeal\n    RING_DIP: 15,     // Ring Distal Interphalangeal\n    PINKY_MCP: 17,    // Pinky Metacarpophalangeal\n    PINKY_PIP: 18,    // Pinky Proximal Interphalangeal\n    PINKY_DIP: 19     // Pinky Distal Interphalangeal\n}\n\n// Mapping between finger-to-knuckle touches and letters\nexport const LETTER_MAPPINGS = {\n    // Thumb to index finger knuckles\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.INDEX_MCP}`]: 'a',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.INDEX_PIP}`]: 'b',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.INDEX_DIP}`]: 'c',\n    \n    // Thumb to middle finger knuckles\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.MIDDLE_MCP}`]: 'd',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.MIDDLE_PIP}`]: 'e',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.MIDDLE_DIP}`]: 'f',\n    \n    // Thumb to ring finger knuckles\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.RING_MCP}`]: 'g',    // This should be 'g'\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.RING_PIP}`]: 'h',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.RING_DIP}`]: 'i',\n    \n    // Thumb to pinky finger knuckles\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.PINKY_MCP}`]: 'j',   // This should be 'j'\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.PINKY_PIP}`]: 'k',\n    [`${FINGER_TIPS.THUMB}_${KNUCKLES.PINKY_DIP}`]: 'l',\n    \n    // Index finger to thumb knuckles\n    [`${FINGER_TIPS.INDEX}_${KNUCKLES.THUMB_CMC}`]: 'm',\n    [`${FINGER_TIPS.INDEX}_${KNUCKLES.THUMB_MCP}`]: 'n',\n    [`${FINGER_TIPS.INDEX}_${KNUCKLES.THUMB_IP}`]: 'o',\n    \n    // // Index finger to other knuckles\n    // [`${FINGER_TIPS.INDEX}_${KNUCKLES.MIDDLE_MCP}`]: 'p',\n    // [`${FINGER_TIPS.INDEX}_${KNUCKLES.MIDDLE_PIP}`]: 'q',\n    // [`${FINGER_TIPS.INDEX}_${KNUCKLES.MIDDLE_DIP}`]: 'r',\n    // [`${FINGER_TIPS.INDEX}_${KNUCKLES.RING_MCP}`]: 's',\n    // [`${FINGER_TIPS.INDEX}_${KNUCKLES.RING_PIP}`]: 't',\n    \n    // // Middle finger mappings\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.THUMB_CMC}`]: 'u',\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.THUMB_MCP}`]: 'v',\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.THUMB_IP}`]: 'w',\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.INDEX_MCP}`]: 'x',\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.INDEX_PIP}`]: 'y',\n    // [`${FINGER_TIPS.MIDDLE}_${KNUCKLES.INDEX_DIP}`]: 'z'\n}\n\n// Let's also add a debugging function to verify mappings\nexport function debugGestureMapping() {\n    console.log('🗺️ All Gesture Mappings:')\n    Object.entries(ALL_GESTURES).forEach(([gestureKey, letter]) => {\n        const [fingerTipIndex, knuckleIndex] = gestureKey.split('_')\n        const fingerName = getFingerName(parseInt(fingerTipIndex))\n        const knuckleName = getKnuckleName(parseInt(knuckleIndex))\n        console.log(`  ${fingerName} → ${knuckleName} = \"${letter}\" (${gestureKey})`)\n    })\n    \n    // Specific checks for the problematic gestures\n    const thumbRingMCP = getGestureKey(FINGER_TIPS.THUMB, KNUCKLES.RING_MCP)\n    const thumbPinkyMCP = getGestureKey(FINGER_TIPS.THUMB, KNUCKLES.PINKY_MCP)\n    \n    console.log(`\\n🔍 Specific mappings:`)\n    console.log(`  THUMB → RING_MCP (${thumbRingMCP}) = \"${getLetterForGesture(thumbRingMCP)}\"`)\n    console.log(`  THUMB → PINKY_MCP (${thumbPinkyMCP}) = \"${getLetterForGesture(thumbPinkyMCP)}\"`)\n}\n\n// Special gestures for control functions\nexport const SPECIAL_MAPPINGS = {\n    // Using ring finger to touch thumb knuckles for special characters\n    [`${FINGER_TIPS.RING}_${KNUCKLES.THUMB_CMC}`]: '.',\n    [`${FINGER_TIPS.RING}_${KNUCKLES.THUMB_MCP}`]: ',',\n    [`${FINGER_TIPS.RING}_${KNUCKLES.THUMB_IP}`]: '?',\n    \n    // Using pinky finger for more special characters\n    [`${FINGER_TIPS.PINKY}_${KNUCKLES.THUMB_CMC}`]: '!',\n    [`${FINGER_TIPS.PINKY}_${KNUCKLES.THUMB_MCP}`]: '-',\n    [`${FINGER_TIPS.PINKY}_${KNUCKLES.THUMB_IP}`]: \"'\",\n    \n    // // Additional special characters using different combinations\n    // [`${FINGER_TIPS.RING}_${KNUCKLES.INDEX_MCP}`]: ':',\n    // [`${FINGER_TIPS.RING}_${KNUCKLES.INDEX_PIP}`]: ';',\n    // [`${FINGER_TIPS.PINKY}_${KNUCKLES.INDEX_MCP}`]: '\"',\n    // [`${FINGER_TIPS.PINKY}_${KNUCKLES.INDEX_PIP}`]: '('\n}\n\n// Combine all gesture mappings\nexport const ALL_GESTURES = { ...LETTER_MAPPINGS, ...SPECIAL_MAPPINGS }\n\n// Export combined mappings object\nexport const GESTURE_MAPPINGS = {\n    FINGER_TIPS,\n    KNUCKLES,\n    LETTER_MAPPINGS,\n    SPECIAL_MAPPINGS,\n    ALL_GESTURES\n}\n\n// Helper functions for gesture mapping\nexport function getFingerName(fingerTipIndex) {\n    return Object.keys(FINGER_TIPS).find(key => FINGER_TIPS[key] === fingerTipIndex)\n}\n\nexport function getKnuckleName(knuckleIndex) {\n    return Object.keys(KNUCKLES).find(key => KNUCKLES[key] === knuckleIndex)\n}\n\nexport function getGestureKey(fingerTipIndex, knuckleIndex) {\n    return `${fingerTipIndex}_${knuckleIndex}`\n}\n\nexport function isValidGesture(gestureKey) {\n    return gestureKey in ALL_GESTURES\n}\n\nexport function getLetterForGesture(gestureKey) {\n    return ALL_GESTURES[gestureKey] || null\n}\n\n// Get all finger tip indices as array\nexport function getFingerTipIndices() {\n    return Object.values(FINGER_TIPS)\n}\n\n// Get all knuckle indices as array\nexport function getKnuckleIndices() {\n    return Object.values(KNUCKLES)\n}\n","// src/utils/Camera.js\nexport class Camera {\n    constructor(videoElement, options = {}) {\n        this.video = videoElement\n        this.options = {\n            width: 640,\n            height: 480,\n            facingMode: 'user',\n            onFrame: null,\n            ...options\n        }\n        \n        this.stream = null\n        this.animationId = null\n        this.isRunning = false\n    }\n    \n    async start() {\n        try {\n            // Request camera permissions and stream\n            const constraints = {\n                video: {\n                    width: { ideal: this.options.width },\n                    height: { ideal: this.options.height },\n                    facingMode: this.options.facingMode,\n                    frameRate: { ideal: 30, max: 60 }\n                },\n                audio: false\n            }\n            \n            this.stream = await navigator.mediaDevices.getUserMedia(constraints)\n            this.video.srcObject = this.stream\n            \n            // Wait for video metadata to load\n            await new Promise((resolve, reject) => {\n                this.video.onloadedmetadata = () => {\n                    this.video.play()\n                        .then(resolve)\n                        .catch(reject)\n                }\n                \n                this.video.onerror = () => {\n                    reject(new Error('Video element error'))\n                }\n                \n                // Timeout after 10 seconds\n                setTimeout(() => {\n                    reject(new Error('Camera initialization timeout'))\n                }, 10000)\n            })\n            \n            // Log actual video dimensions\n            console.log(`📹 Camera started: ${this.video.videoWidth}x${this.video.videoHeight}`)\n            \n            // Start the frame processing loop\n            this.isRunning = true\n            this.startFrameLoop()\n            \n            return {\n                width: this.video.videoWidth,\n                height: this.video.videoHeight\n            }\n            \n        } catch (error) {\n            await this.stop()\n            throw new Error(`Failed to start camera: ${error.message}`)\n        }\n    }\n    \n    startFrameLoop() {\n        if (!this.isRunning) return\n        \n        const processFrame = async () => {\n            if (!this.isRunning) return\n            \n            try {\n                if (this.options.onFrame && typeof this.options.onFrame === 'function') {\n                    await this.options.onFrame()\n                }\n            } catch (error) {\n                console.error('Error in frame processing:', error)\n            }\n            \n            // Schedule next frame\n            this.animationId = requestAnimationFrame(processFrame)\n        }\n        \n        processFrame()\n    }\n    \n    async stop() {\n        this.isRunning = false\n        \n        // Cancel animation frame\n        if (this.animationId) {\n            cancelAnimationFrame(this.animationId)\n            this.animationId = null\n        }\n        \n        // Stop video stream\n        if (this.stream) {\n            this.stream.getTracks().forEach(track => {\n                track.stop()\n            })\n            this.stream = null\n        }\n        \n        // Clear video source\n        if (this.video) {\n            this.video.srcObject = null\n        }\n        \n        console.log('📹 Camera stopped')\n    }\n    \n    // Get current video dimensions\n    getDimensions() {\n        return {\n            width: this.video.videoWidth || this.options.width,\n            height: this.video.videoHeight || this.options.height\n        }\n    }\n    \n    // Check if camera is currently running\n    isActive() {\n        return this.isRunning && this.stream && this.stream.active\n    }\n    \n    // Get available camera devices\n    static async getAvailableDevices() {\n        try {\n            const devices = await navigator.mediaDevices.enumerateDevices()\n            return devices.filter(device => device.kind === 'videoinput')\n        } catch (error) {\n            console.error('Error getting camera devices:', error)\n            return []\n        }\n    }\n    \n    // Switch to a different camera device\n    async switchCamera(deviceId) {\n        if (this.isRunning) {\n            await this.stop()\n        }\n        \n        this.options.deviceId = deviceId\n        delete this.options.facingMode // Remove facingMode when using specific device\n        \n        // Update constraints to use specific device\n        const constraints = {\n            video: {\n                deviceId: { exact: deviceId },\n                width: { ideal: this.options.width },\n                height: { ideal: this.options.height },\n                frameRate: { ideal: 30, max: 60 }\n            },\n            audio: false\n        }\n        \n        this.stream = await navigator.mediaDevices.getUserMedia(constraints)\n        this.video.srcObject = this.stream\n        \n        await new Promise((resolve) => {\n            this.video.onloadedmetadata = () => {\n                this.video.play()\n                resolve()\n            }\n        })\n        \n        this.isRunning = true\n        this.startFrameLoop()\n        \n        return this.getDimensions()\n    }\n    \n    // Take a photo from the current video stream\n    takePhoto(format = 'image/png', quality = 0.9) {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        \n        canvas.width = this.video.videoWidth\n        canvas.height = this.video.videoHeight\n        \n        // Draw current video frame\n        ctx.drawImage(this.video, 0, 0)\n        \n        // Return as data URL\n        return canvas.toDataURL(format, quality)\n    }\n    \n    // Check camera permissions\n    static async checkPermissions() {\n        try {\n            const permission = await navigator.permissions.query({ name: 'camera' })\n            return {\n                state: permission.state,\n                granted: permission.state === 'granted'\n            }\n        } catch (error) {\n            console.warn('Cannot check camera permissions:', error)\n            return {\n                state: 'unknown',\n                granted: false\n            }\n        }\n    }\n}\n","// src/utils/PerformanceMonitor.js\nexport class PerformanceMonitor {\n    constructor() {\n        this.frameCount = 0\n        this.lastFpsUpdate = Date.now()\n        this.fps = 0\n        this.frameTimestamps = []\n        this.maxFrameHistory = 60 // Keep last 60 frames for analysis\n        \n        this.isRunning = false\n        this.startTime = null\n        \n        // Performance metrics\n        this.metrics = {\n            averageFps: 0,\n            minFps: Infinity,\n            maxFps: 0,\n            frameDrops: 0,\n            totalFrames: 0\n        }\n    }\n    \n    start() {\n        this.isRunning = true\n        this.startTime = Date.now()\n        this.lastFpsUpdate = this.startTime\n        this.frameCount = 0\n        this.frameTimestamps = []\n        \n        // Reset metrics\n        this.metrics = {\n            averageFps: 0,\n            minFps: Infinity,\n            maxFps: 0,\n            frameDrops: 0,\n            totalFrames: 0\n        }\n        \n        console.log('📊 Performance monitoring started')\n    }\n    \n    stop() {\n        this.isRunning = false\n        console.log('📊 Performance monitoring stopped')\n        this.logSummary()\n    }\n    \n    recordFrame() {\n        if (!this.isRunning) return\n        \n        const now = Date.now()\n        this.frameCount++\n        this.metrics.totalFrames++\n        \n        // Add to frame history\n        this.frameTimestamps.push(now)\n        if (this.frameTimestamps.length > this.maxFrameHistory) {\n            this.frameTimestamps.shift()\n        }\n        \n        // Update FPS every second\n        if (now - this.lastFpsUpdate >= 1000) {\n            this.fps = Math.round(this.frameCount * 1000 / (now - this.lastFpsUpdate))\n            \n            // Update metrics\n            this.updateMetrics(this.fps)\n            \n            // Reset for next measurement\n            this.frameCount = 0\n            this.lastFpsUpdate = now\n        }\n    }\n    \n    updateMetrics(currentFps) {\n        // Update min/max FPS\n        if (currentFps > 0) {\n            this.metrics.minFps = Math.min(this.metrics.minFps, currentFps)\n            this.metrics.maxFps = Math.max(this.metrics.maxFps, currentFps)\n        }\n        \n        // Calculate average FPS\n        const runningTime = (Date.now() - this.startTime) / 1000\n        this.metrics.averageFps = Math.round(this.metrics.totalFrames / runningTime)\n        \n        // Detect frame drops (FPS below 20)\n        if (currentFps < 20 && currentFps > 0) {\n            this.metrics.frameDrops++\n        }\n    }\n    \n    getFPS() {\n        return this.fps\n    }\n    \n    getMetrics() {\n        return { ...this.metrics }\n    }\n    \n    // Get frame time statistics from recent frames\n    getFrameTimeStats() {\n        if (this.frameTimestamps.length < 2) {\n            return {\n                averageFrameTime: 0,\n                minFrameTime: 0,\n                maxFrameTime: 0,\n                frameTimeVariance: 0\n            }\n        }\n        \n        const frameTimes = []\n        for (let i = 1; i < this.frameTimestamps.length; i++) {\n            frameTimes.push(this.frameTimestamps[i] - this.frameTimestamps[i - 1])\n        }\n        \n        const sum = frameTimes.reduce((a, b) => a + b, 0)\n        const average = sum / frameTimes.length\n        const min = Math.min(...frameTimes)\n        const max = Math.max(...frameTimes)\n        \n        // Calculate variance\n        const variance = frameTimes.reduce((acc, time) => {\n            return acc + Math.pow(time - average, 2)\n        }, 0) / frameTimes.length\n        \n        return {\n            averageFrameTime: Math.round(average * 100) / 100,\n            minFrameTime: min,\n            maxFrameTime: max,\n            frameTimeVariance: Math.round(variance * 100) / 100\n        }\n    }\n    \n    // Get performance grade based on metrics\n    getPerformanceGrade() {\n        const avgFps = this.metrics.averageFps\n        const frameDropRatio = this.metrics.frameDrops / (this.metrics.totalFrames || 1)\n        \n        if (avgFps >= 55 && frameDropRatio < 0.01) {\n            return { grade: 'A', description: 'Excellent performance' }\n        } else if (avgFps >= 45 && frameDropRatio < 0.05) {\n            return { grade: 'B', description: 'Good performance' }\n        } else if (avgFps >= 30 && frameDropRatio < 0.1) {\n            return { grade: 'C', description: 'Acceptable performance' }\n        } else if (avgFps >= 20 && frameDropRatio < 0.2) {\n            return { grade: 'D', description: 'Poor performance' }\n        } else {\n            return { grade: 'F', description: 'Very poor performance' }\n        }\n    }\n    \n    // Check if performance is degraded\n    isPerformanceDegraded() {\n        return this.metrics.averageFps < 20 || this.metrics.frameDrops > this.metrics.totalFrames * 0.1\n    }\n    \n    // Get performance recommendations\n    getRecommendations() {\n        const recommendations = []\n        \n        if (this.metrics.averageFps < 30) {\n            recommendations.push('Consider reducing video resolution or model complexity')\n        }\n        \n        if (this.metrics.frameDrops > this.metrics.totalFrames * 0.05) {\n            recommendations.push('Frequent frame drops detected - close other applications')\n        }\n        \n        const frameStats = this.getFrameTimeStats()\n        if (frameStats.frameTimeVariance > 100) {\n            recommendations.push('Inconsistent frame timing - check system load')\n        }\n        \n        if (recommendations.length === 0) {\n            recommendations.push('Performance is good!')\n        }\n        \n        return recommendations\n    }\n    \n    // Log performance summary\n    logSummary() {\n        const runningTime = this.startTime ? (Date.now() - this.startTime) / 1000 : 0\n        const grade = this.getPerformanceGrade()\n        const frameStats = this.getFrameTimeStats()\n        \n        console.group('📊 Performance Summary')\n        console.log(`Running time: ${runningTime.toFixed(1)}s`)\n        console.log(`Total frames: ${this.metrics.totalFrames}`)\n        console.log(`Average FPS: ${this.metrics.averageFps}`)\n        console.log(`FPS range: ${this.metrics.minFps === Infinity ? 0 : this.metrics.minFps} - ${this.metrics.maxFps}`)\n        console.log(`Frame drops: ${this.metrics.frameDrops}`)\n        console.log(`Performance grade: ${grade.grade} (${grade.description})`)\n        console.log(`Average frame time: ${frameStats.averageFrameTime}ms`)\n        console.log('Recommendations:')\n        this.getRecommendations().forEach(rec => console.log(`  • ${rec}`))\n        console.groupEnd()\n    }\n    \n    // Create a performance report object\n    createReport() {\n        const runningTime = this.startTime ? (Date.now() - this.startTime) / 1000 : 0\n        \n        return {\n            timestamp: new Date().toISOString(),\n            runningTime: runningTime,\n            metrics: this.getMetrics(),\n            frameTimeStats: this.getFrameTimeStats(),\n            performanceGrade: this.getPerformanceGrade(),\n            recommendations: this.getRecommendations(),\n            isDegraded: this.isPerformanceDegraded()\n        }\n    }\n}\n","// src/utils/SnapshotManager.js\nexport class SnapshotManager {\n    constructor(app) {\n        this.app = app\n        this.snapshots = []\n        this.maxSnapshots = 10\n        this.container = null\n        \n        this.initContainer()\n    }\n    \n    initContainer() {\n        console.log('📦 Initializing snapshot container...')\n        \n        // Create container if it doesn't exist\n        this.container = document.getElementById('snapshot-container')\n        if (!this.container) {\n            console.log('📦 Creating new snapshot container...')\n            this.container = this.createContainer()\n        } else {\n            console.log('📦 Snapshot container already exists')\n        }\n        \n        return this.container\n    }\n    \n    createContainer() {\n        console.log('🏗️ Building snapshot container structure...')\n        \n        const container = document.createElement('div')\n        container.id = 'snapshot-container'\n        container.style.cssText = `\n            margin-top: 30px;\n            padding: 20px;\n            border: 2px solid #ecf0f1;\n            border-radius: 12px;\n            background: #f8f9fa;\n        `\n        \n        const header = document.createElement('h3')\n        header.textContent = '📸 Gesture Analysis Snapshots'\n        header.style.cssText = `\n            margin: 0 0 15px 0;\n            color: #2c3e50;\n            text-align: center;\n        `\n        container.appendChild(header)\n        \n        const description = document.createElement('p')\n        description.textContent = 'Capture moments during gesture detection for analysis and debugging'\n        description.style.cssText = `\n            text-align: center;\n            color: #666;\n            margin-bottom: 20px;\n            font-style: italic;\n        `\n        container.appendChild(description)\n        \n        // Control buttons\n        const controls = document.createElement('div')\n        controls.style.cssText = `\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n            margin-bottom: 20px;\n            flex-wrap: wrap;\n        `\n        \n        const clearAllBtn = document.createElement('button')\n        clearAllBtn.textContent = '🗑️ Clear All'\n        clearAllBtn.style.backgroundColor = '#e74c3c'\n        clearAllBtn.addEventListener('click', () => {\n            console.log('🗑️ Clearing all snapshots...')\n            this.clearAllSnapshots()\n        })\n        controls.appendChild(clearAllBtn)\n        \n        const exportBtn = document.createElement('button')\n        exportBtn.textContent = '💾 Export'\n        exportBtn.style.backgroundColor = '#9b59b6'\n        exportBtn.addEventListener('click', () => {\n            console.log('💾 Exporting snapshots...')\n            this.exportSnapshots()\n        })\n        controls.appendChild(exportBtn)\n        \n        // Add capture mode toggle\n        const videoOnlyBtn = document.createElement('button')\n        videoOnlyBtn.textContent = '📹 Video Only'\n        videoOnlyBtn.style.backgroundColor = '#3498db'\n        videoOnlyBtn.style.fontSize = '14px'\n        videoOnlyBtn.style.padding = '8px 12px'\n        videoOnlyBtn.addEventListener('click', () => {\n            console.log('📹 Taking video-only snapshot from container...')\n            this.takeVideoOnlySnapshot()\n        })\n        controls.appendChild(videoOnlyBtn)\n        \n        const overlayBtn = document.createElement('button')\n        overlayBtn.textContent = '🎯 With Overlay'\n        overlayBtn.style.backgroundColor = '#2ecc71'\n        overlayBtn.style.fontSize = '14px'\n        overlayBtn.style.padding = '8px 12px'\n        overlayBtn.addEventListener('click', () => {\n            console.log('🎯 Taking overlay snapshot from container...')\n            this.takeSnapshot()\n        })\n        controls.appendChild(overlayBtn)\n        \n        container.appendChild(controls)\n        \n        // Snapshots grid\n        const grid = document.createElement('div')\n        grid.id = 'snapshots-grid'\n        grid.style.cssText = `\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-top: 20px;\n        `\n        container.appendChild(grid)\n        \n        // Add to main container\n        const mainContainer = document.querySelector('.container')\n        if (mainContainer) {\n            mainContainer.appendChild(container)\n            console.log('🏗️ Snapshot container added to main container')\n        } else {\n            console.error('🏗️ Main container not found!')\n            document.body.appendChild(container)\n            console.log('🏗️ Snapshot container added to body as fallback')\n        }\n        \n        return container\n    }\n    \n    takeSnapshot() {\n        try {\n            console.log('📸 Taking snapshot...')\n            \n            if (!this.app.handLandmarker || !this.app.videoElement) {\n                console.error('📸 Cannot take snapshot: system not ready')\n                this.app.updateStatus('Cannot take snapshot: system not ready', 'status warning')\n                return\n            }\n            \n            // Check if video is actually playing\n            if (this.app.videoElement.readyState < 2) {\n                console.error('📸 Cannot take snapshot: video not ready')\n                this.app.updateStatus('Cannot take snapshot: video not ready', 'status warning')\n                return\n            }\n            \n            console.log('📸 Creating snapshot data...')\n            const snapshot = this.createSnapshotData()\n            \n            if (!snapshot.image || snapshot.image.length < 100) {\n                console.error('📸 Snapshot image is invalid or too small')\n                this.app.updateStatus('Snapshot capture failed', 'status warning')\n                return\n            }\n            \n            console.log('📸 Adding snapshot to collection...')\n            this.addSnapshot(snapshot)\n            \n            console.log('📸 Displaying snapshot...')\n            this.displaySnapshot(snapshot)\n            \n            // Visual feedback\n            this.app.flashGestureDetection('rgba(138, 43, 226, 0.4)') // Purple for snapshot\n            this.app.updateStatus(`📸 Snapshot #${this.snapshots.length} captured`, 'status success')\n            \n            console.log('📸 Snapshot completed successfully')\n            \n        } catch (error) {\n            console.error('📸 Error taking snapshot:', error)\n            this.app.updateStatus(`Snapshot error: ${error.message}`, 'status warning')\n        }\n    }\n    \n    // Method to take video-only snapshot\n    takeVideoOnlySnapshot() {\n        try {\n            console.log('📹 Taking video-only snapshot...')\n            \n            if (!this.app.videoElement) {\n                console.error('📹 Cannot take snapshot: video not ready')\n                this.app.updateStatus('Cannot take snapshot: video not ready', 'status warning')\n                return\n            }\n            \n            // Check if video is actually playing\n            if (this.app.videoElement.readyState < 2) {\n                console.error('📹 Cannot take snapshot: video not loaded')\n                this.app.updateStatus('Cannot take snapshot: video not loaded', 'status warning')\n                return\n            }\n            \n            const timestamp = new Date()\n            const snapshot = {\n                id: Date.now(),\n                timestamp: timestamp.toISOString(),\n                displayTime: timestamp.toLocaleTimeString(),\n                image: this.captureVideoOnly(),\n                type: 'video-only', // Mark as video-only type\n                activeGesture: this.app.currentActiveGesture,\n                config: { ...this.app.config },\n                touches: Array.from(this.app.currentTouches || []),\n                debugInfo: 'Video-only snapshot - no overlay data',\n                performance: this.app.performanceMonitor.createReport(),\n                videoInfo: {\n                    width: this.app.videoElement.videoWidth,\n                    height: this.app.videoElement.videoHeight\n                }\n            }\n            \n            if (!snapshot.image || snapshot.image.length < 100) {\n                console.error('📹 Video snapshot image is invalid')\n                this.app.updateStatus('Video snapshot capture failed', 'status warning')\n                return\n            }\n            \n            this.addSnapshot(snapshot)\n            this.displaySnapshot(snapshot)\n            \n            // Visual feedback with different color\n            this.app.flashGestureDetection('rgba(52, 152, 219, 0.4)') // Blue for video-only\n            this.app.updateStatus(`📹 Video snapshot #${this.snapshots.length} captured`, 'status success')\n            \n            console.log('📹 Video-only snapshot completed successfully')\n            \n        } catch (error) {\n            console.error('📹 Error taking video snapshot:', error)\n            this.app.updateStatus(`Video snapshot error: ${error.message}`, 'status warning')\n        }\n    }\n    captureVideoOnly() {\n        try {\n            const tempCanvas = document.createElement('canvas')\n            const tempCtx = tempCanvas.getContext('2d')\n            \n            tempCanvas.width = this.app.videoElement.videoWidth || 640\n            tempCanvas.height = this.app.videoElement.videoHeight || 480\n            \n            // Mirror the video to match display\n            tempCtx.save()\n            tempCtx.scale(-1, 1)\n            tempCtx.translate(-tempCanvas.width, 0)\n            tempCtx.drawImage(this.app.videoElement, 0, 0, tempCanvas.width, tempCanvas.height)\n            tempCtx.restore()\n            \n            return tempCanvas.toDataURL('image/png', 0.8)\n            \n        } catch (error) {\n            console.error('Error capturing video only:', error)\n            return null\n        }\n    }\n    \n    createSnapshotData() {\n        const timestamp = new Date()\n        const debugDiv = document.getElementById('debug-info')\n        \n        return {\n            id: Date.now(),\n            timestamp: timestamp.toISOString(),\n            displayTime: timestamp.toLocaleTimeString(),\n            image: this.captureVideoWithOverlay(), // Updated to capture video + overlay\n            activeGesture: this.app.currentActiveGesture,\n            config: { ...this.app.config },\n            touches: Array.from(this.app.currentTouches || []),\n            debugInfo: debugDiv ? debugDiv.textContent : 'Debug info not available',\n            performance: this.app.performanceMonitor.createReport(),\n            videoInfo: {\n                width: this.app.videoElement.videoWidth,\n                height: this.app.videoElement.videoHeight\n            }\n        }\n    }\n    \n    captureVideoWithOverlay() {\n        try {\n            // Create a temporary canvas to combine video and overlay\n            const tempCanvas = document.createElement('canvas')\n            const tempCtx = tempCanvas.getContext('2d')\n            \n            // Set canvas size to match video\n            tempCanvas.width = this.app.videoElement.videoWidth || 640\n            tempCanvas.height = this.app.videoElement.videoHeight || 480\n            \n            console.log('📸 Capturing video with overlay, canvas size:', tempCanvas.width, 'x', tempCanvas.height)\n            \n            // Save the current state\n            tempCtx.save()\n            \n            // Mirror the canvas to match the display\n            tempCtx.scale(-1, 1)\n            tempCtx.translate(-tempCanvas.width, 0)\n            \n            // Draw the video frame\n            tempCtx.drawImage(this.app.videoElement, 0, 0, tempCanvas.width, tempCanvas.height)\n            \n            // Restore to normal orientation for overlay\n            tempCtx.restore()\n            tempCtx.save()\n            \n            // Mirror again for the overlay to match\n            tempCtx.scale(-1, 1)\n            tempCtx.translate(-tempCanvas.width, 0)\n            \n            // Draw the canvas overlay (landmarks and debug info)\n            if (this.app.canvasElement) {\n                tempCtx.drawImage(this.app.canvasElement, 0, 0)\n                console.log('📸 Added overlay to snapshot')\n            } else {\n                console.warn('📸 Canvas overlay not available')\n            }\n            \n            tempCtx.restore()\n            \n            // Convert to data URL\n            const dataUrl = tempCanvas.toDataURL('image/png', 0.8)\n            console.log('📸 Generated data URL, length:', dataUrl.length)\n            \n            return dataUrl\n            \n        } catch (error) {\n            console.error('Error capturing video with overlay:', error)\n            // Fallback to just the canvas\n            if (this.app.canvasElement) {\n                console.log('📸 Falling back to canvas only')\n                return this.app.canvasElement.toDataURL('image/png', 0.8)\n            }\n            // Ultimate fallback - return a placeholder\n            return this.createErrorPlaceholder()\n        }\n    }\n    \n    // Alternative method to capture just the video without overlay\n    captureVideoOnly() {\n        try {\n            const tempCanvas = document.createElement('canvas')\n            const tempCtx = tempCanvas.getContext('2d')\n            \n            tempCanvas.width = this.app.videoElement.videoWidth || 640\n            tempCanvas.height = this.app.videoElement.videoHeight || 480\n            \n            console.log('📹 Capturing video only, canvas size:', tempCanvas.width, 'x', tempCanvas.height)\n            \n            // Check if video is ready\n            if (!this.app.videoElement.videoWidth || !this.app.videoElement.videoHeight) {\n                console.warn('📹 Video not ready, dimensions are 0')\n                return this.createErrorPlaceholder()\n            }\n            \n            // Mirror the video to match display\n            tempCtx.save()\n            tempCtx.scale(-1, 1)\n            tempCtx.translate(-tempCanvas.width, 0)\n            tempCtx.drawImage(this.app.videoElement, 0, 0, tempCanvas.width, tempCanvas.height)\n            tempCtx.restore()\n            \n            const dataUrl = tempCanvas.toDataURL('image/png', 0.8)\n            console.log('📹 Generated video-only data URL, length:', dataUrl.length)\n            \n            return dataUrl\n            \n        } catch (error) {\n            console.error('Error capturing video only:', error)\n            return this.createErrorPlaceholder()\n        }\n    }\n    \n    createErrorPlaceholder() {\n        // Create a simple error placeholder image\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')\n        canvas.width = 640\n        canvas.height = 480\n        \n        // Fill with gray background\n        ctx.fillStyle = '#f0f0f0'\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n        \n        // Add error text\n        ctx.fillStyle = '#666'\n        ctx.font = '24px Arial'\n        ctx.textAlign = 'center'\n        ctx.fillText('Snapshot Error', canvas.width / 2, canvas.height / 2 - 20)\n        ctx.fillText('Unable to capture video', canvas.width / 2, canvas.height / 2 + 20)\n        \n        return canvas.toDataURL('image/png', 0.8)\n    }\n    \n    addSnapshot(snapshot) {\n        this.snapshots.push(snapshot)\n        \n        // Remove oldest if exceeding limit\n        if (this.snapshots.length > this.maxSnapshots) {\n            const removed = this.snapshots.shift()\n            this.removeSnapshotDisplay(removed.id)\n        }\n    }\n    \n    displaySnapshot(snapshot) {\n        console.log('🖼️ Displaying snapshot:', snapshot.id)\n        \n        const grid = document.getElementById('snapshots-grid')\n        if (!grid) {\n            console.error('🖼️ Snapshots grid not found, creating container...')\n            this.initContainer()\n            const newGrid = document.getElementById('snapshots-grid')\n            if (!newGrid) {\n                console.error('🖼️ Failed to create snapshots grid')\n                return\n            }\n        }\n        \n        const finalGrid = document.getElementById('snapshots-grid')\n        \n        const card = document.createElement('div')\n        card.className = 'snapshot-card'\n        card.id = `snapshot-${snapshot.id}`\n        card.style.cssText = `\n            border: 2px solid #ddd;\n            border-radius: 10px;\n            padding: 15px;\n            background: white;\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n            transition: transform 0.2s ease;\n            margin-bottom: 15px;\n        `\n        \n        card.addEventListener('mouseenter', () => {\n            card.style.transform = 'translateY(-5px)'\n            card.style.boxShadow = '0 8px 16px rgba(0,0,0,0.15)'\n        })\n        \n        card.addEventListener('mouseleave', () => {\n            card.style.transform = 'translateY(0)'\n            card.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)'\n        })\n        \n        console.log('🖼️ Creating snapshot HTML...')\n        card.innerHTML = this.createSnapshotHTML(snapshot)\n        \n        // Add event listeners\n        console.log('🖼️ Adding event listeners...')\n        this.addSnapshotEventListeners(card, snapshot)\n        \n        // Insert at the beginning\n        console.log('🖼️ Inserting card into grid...')\n        finalGrid.insertBefore(card, finalGrid.firstChild)\n        \n        console.log('🖼️ Snapshot displayed successfully')\n        \n        // Scroll the container into view\n        setTimeout(() => {\n            card.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n        }, 100)\n    }\n    \n    createSnapshotHTML(snapshot) {\n        const performanceGrade = snapshot.performance.performanceGrade\n        const gradeColor = this.getGradeColor(performanceGrade.grade)\n        const snapshotType = snapshot.type === 'video-only' ? '📹 Video Only' : '🎯 Video + Overlay'\n        const typeColor = snapshot.type === 'video-only' ? '#3498db' : '#2ecc71'\n        \n        return `\n            <div class=\"snapshot-header\" style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;\">\n                <h4 style=\"margin: 0; color: #2c3e50;\">Snapshot #${this.snapshots.length}</h4>\n                <div style=\"display: flex; flex-direction: column; align-items: flex-end;\">\n                    <span style=\"font-size: 12px; color: #666;\">${snapshot.displayTime}</span>\n                    <span style=\"font-size: 10px; color: ${typeColor}; font-weight: bold;\">${snapshotType}</span>\n                </div>\n            </div>\n            \n            <div class=\"snapshot-image\" style=\"text-align: center; margin-bottom: 15px;\">\n                <img src=\"${snapshot.image}\" \n                     style=\"max-width: 100%; height: auto; border: 1px solid #ddd; border-radius: 5px; cursor: pointer; transition: transform 0.2s;\"\n                     onclick=\"this.style.transform = this.style.transform ? '' : 'scale(2)'; this.style.zIndex = this.style.zIndex ? '' : '1000'; this.style.position = this.style.position ? '' : 'fixed'; this.style.top = this.style.top ? '' : '50%'; this.style.left = this.style.left ? '' : '50%'; this.style.marginTop = this.style.marginTop ? '' : '-25vh'; this.style.marginLeft = this.style.marginLeft ? '' : '-25vw';\"\n                     title=\"Click to zoom in/out\">\n            </div>\n            \n            <div class=\"snapshot-info\" style=\"font-size: 12px; line-height: 1.4;\">\n                <div style=\"margin-bottom: 8px;\">\n                    <strong>Active Gesture:</strong> \n                    <span style=\"color: ${snapshot.activeGesture ? '#27ae60' : '#e74c3c'};\">\n                        ${snapshot.activeGesture || 'None'}\n                    </span>\n                </div>\n                \n                <div style=\"margin-bottom: 8px;\">\n                    <strong>Touch Sensitivity:</strong> ${snapshot.config.touchDistance.toFixed(3)}\n                </div>\n                \n                <div style=\"margin-bottom: 8px;\">\n                    <strong>Performance:</strong> \n                    <span style=\"color: ${gradeColor}; font-weight: bold;\">\n                        ${performanceGrade.grade} (${snapshot.performance.metrics.averageFps} FPS avg)\n                    </span>\n                </div>\n                \n                <div style=\"margin-bottom: 8px;\">\n                    <strong>Active Touches:</strong> ${snapshot.touches.length}\n                </div>\n                \n                <div style=\"margin-bottom: 8px;\">\n                    <strong>Video Resolution:</strong> ${snapshot.videoInfo.width}x${snapshot.videoInfo.height}\n                </div>\n                \n                ${snapshot.type !== 'video-only' ? `\n                <div class=\"debug-section\" style=\"background: #f8f9fa; padding: 8px; border-radius: 4px; margin: 10px 0;\">\n                    <strong>Debug Info:</strong>\n                    <div style=\"font-family: monospace; font-size: 10px; max-height: 60px; overflow-y: auto; margin-top: 5px;\">\n                        ${snapshot.debugInfo}\n                    </div>\n                </div>\n                ` : '<div style=\"text-align: center; color: #666; font-style: italic; margin: 10px 0;\">Clean video capture without overlay</div>'}\n                \n                <div class=\"controls\" style=\"display: flex; gap: 8px; margin-top: 10px;\">\n                    <button class=\"analyze-btn\" data-id=\"${snapshot.id}\" \n                            style=\"flex: 1; padding: 5px; font-size: 11px; background: #3498db; color: white; border: none; border-radius: 3px; cursor: pointer;\">\n                        📊 Analyze\n                    </button>\n                    <button class=\"download-btn\" data-id=\"${snapshot.id}\"\n                            style=\"flex: 1; padding: 5px; font-size: 11px; background: #2ecc71; color: white; border: none; border-radius: 3px; cursor: pointer;\">\n                        💾 Download\n                    </button>\n                    <button class=\"delete-btn\" data-id=\"${snapshot.id}\"\n                            style=\"flex: 1; padding: 5px; font-size: 11px; background: #e74c3c; color: white; border: none; border-radius: 3px; cursor: pointer;\">\n                        🗑️ Delete\n                    </button>\n                </div>\n            </div>\n        `\n    }\n    \n    addSnapshotEventListeners(card, snapshot) {\n        // Delete button\n        const deleteBtn = card.querySelector('.delete-btn')\n        deleteBtn.addEventListener('click', () => {\n            this.deleteSnapshot(snapshot.id)\n        })\n        \n        // Analyze button\n        const analyzeBtn = card.querySelector('.analyze-btn')\n        analyzeBtn.addEventListener('click', () => {\n            this.analyzeSnapshot(snapshot)\n        })\n        \n        // Download button\n        const downloadBtn = card.querySelector('.download-btn')\n        if (downloadBtn) {\n            downloadBtn.addEventListener('click', () => {\n                this.downloadSnapshot(snapshot)\n            })\n        }\n    }\n    \n    downloadSnapshot(snapshot) {\n        try {\n            // Create download link\n            const link = document.createElement('a')\n            link.href = snapshot.image\n            link.download = `gesture-snapshot-${snapshot.id}.png`\n            \n            // Trigger download\n            document.body.appendChild(link)\n            link.click()\n            document.body.removeChild(link)\n            \n            this.app.updateStatus(`Downloaded snapshot #${snapshot.id}`, 'status success')\n            \n        } catch (error) {\n            console.error('Download error:', error)\n            this.app.updateStatus('Download failed', 'status warning')\n        }\n    }\n    \n    deleteSnapshot(id) {\n        this.snapshots = this.snapshots.filter(s => s.id !== id)\n        this.removeSnapshotDisplay(id)\n    }\n    \n    removeSnapshotDisplay(id) {\n        const card = document.getElementById(`snapshot-${id}`)\n        if (card && card.parentNode) {\n            card.parentNode.removeChild(card)\n        }\n    }\n    \n    analyzeSnapshot(snapshot) {\n        // Create detailed analysis modal/popup\n        const modal = document.createElement('div')\n        modal.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0,0,0,0.8);\n            z-index: 10000;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n            box-sizing: border-box;\n        `\n        \n        const content = document.createElement('div')\n        content.style.cssText = `\n            background: white;\n            border-radius: 12px;\n            padding: 30px;\n            max-width: 800px;\n            max-height: 90vh;\n            overflow-y: auto;\n            position: relative;\n        `\n        \n        content.innerHTML = this.createAnalysisHTML(snapshot)\n        \n        // Close button\n        const closeBtn = document.createElement('button')\n        closeBtn.textContent = '✕'\n        closeBtn.style.cssText = `\n            position: absolute;\n            top: 10px;\n            right: 15px;\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n        `\n        closeBtn.addEventListener('click', () => document.body.removeChild(modal))\n        content.appendChild(closeBtn)\n        \n        modal.appendChild(content)\n        document.body.appendChild(modal)\n        \n        // Close on backdrop click\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                document.body.removeChild(modal)\n            }\n        })\n    }\n    \n    createAnalysisHTML(snapshot) {\n        const perf = snapshot.performance\n        \n        return `\n            <h2 style=\"margin-top: 0; color: #2c3e50;\">📊 Snapshot Analysis</h2>\n            <p style=\"color: #666; margin-bottom: 25px;\">Captured at ${new Date(snapshot.timestamp).toLocaleString()}</p>\n            \n            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 25px;\">\n                <div>\n                    <h3>🎯 Gesture Detection</h3>\n                    <p><strong>Active Gesture:</strong> ${snapshot.activeGesture || 'None'}</p>\n                    <p><strong>Touch Sensitivity:</strong> ${snapshot.config.touchDistance.toFixed(3)}</p>\n                    <p><strong>Active Touches:</strong> ${snapshot.touches.length}</p>\n                    <p><strong>Gesture Timeout:</strong> ${snapshot.config.gestureTimeout}ms</p>\n                </div>\n                \n                <div>\n                    <h3>⚡ Performance Metrics</h3>\n                    <p><strong>Grade:</strong> <span style=\"color: ${this.getGradeColor(perf.performanceGrade.grade)};\">${perf.performanceGrade.grade}</span> (${perf.performanceGrade.description})</p>\n                    <p><strong>Average FPS:</strong> ${perf.metrics.averageFps}</p>\n                    <p><strong>FPS Range:</strong> ${perf.metrics.minFps} - ${perf.metrics.maxFps}</p>\n                    <p><strong>Frame Drops:</strong> ${perf.metrics.frameDrops}</p>\n                    <p><strong>Running Time:</strong> ${perf.runningTime.toFixed(1)}s</p>\n                </div>\n            </div>\n            \n            <div style=\"margin-bottom: 25px;\">\n                <h3>📹 Video Information</h3>\n                <p><strong>Resolution:</strong> ${snapshot.videoInfo.width}x${snapshot.videoInfo.height}</p>\n                <p><strong>Frame Time Stats:</strong> \n                   Avg: ${perf.frameTimeStats.averageFrameTime}ms, \n                   Range: ${perf.frameTimeStats.minFrameTime}-${perf.frameTimeStats.maxFrameTime}ms\n                </p>\n            </div>\n            \n            <div style=\"margin-bottom: 25px;\">\n                <h3>🔧 Recommendations</h3>\n                <ul style=\"margin: 0; padding-left: 20px;\">\n                    ${perf.recommendations.map(rec => `<li>${rec}</li>`).join('')}\n                </ul>\n            </div>\n            \n            <div style=\"margin-bottom: 25px;\">\n                <h3>🐛 Debug Information</h3>\n                <pre style=\"background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto; font-size: 12px;\">${snapshot.debugInfo}</pre>\n            </div>\n            \n            <div style=\"text-align: center;\">\n                <img src=\"${snapshot.image}\" style=\"max-width: 100%; border: 2px solid #ddd; border-radius: 8px;\">\n            </div>\n        `\n    }\n    \n    getGradeColor(grade) {\n        const colors = {\n            'A': '#27ae60',\n            'B': '#2ecc71',\n            'C': '#f39c12',\n            'D': '#e67e22',\n            'F': '#e74c3c'\n        }\n        return colors[grade] || '#666'\n    }\n    \n    clearAllSnapshots() {\n        this.snapshots = []\n        const grid = document.getElementById('snapshots-grid')\n        if (grid) {\n            grid.innerHTML = ''\n        }\n        this.app.updateStatus('All snapshots cleared', 'status')\n    }\n    \n    exportSnapshots() {\n        if (this.snapshots.length === 0) {\n            this.app.updateStatus('No snapshots to export', 'status warning')\n            return\n        }\n        \n        try {\n            const exportData = {\n                exportTime: new Date().toISOString(),\n                appVersion: '1.0.0',\n                snapshotCount: this.snapshots.length,\n                snapshots: this.snapshots.map(s => ({\n                    ...s,\n                    image: s.image.length > 100 ? `${s.image.substring(0, 100)}...` : s.image // Truncate for JSON size\n                }))\n            }\n            \n            const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' })\n            const url = URL.createObjectURL(blob)\n            \n            const a = document.createElement('a')\n            a.href = url\n            a.download = `gesture-snapshots-${new Date().toISOString().split('T')[0]}.json`\n            document.body.appendChild(a)\n            a.click()\n            document.body.removeChild(a)\n            \n            URL.revokeObjectURL(url)\n            \n            this.app.updateStatus(`Exported ${this.snapshots.length} snapshots`, 'status success')\n            \n        } catch (error) {\n            console.error('Export error:', error)\n            this.app.updateStatus('Export failed', 'status warning')\n        }\n    }\n}\n","// src/utils/GestureDetector.js\nimport { \n    GESTURE_MAPPINGS, \n    getFingerName, \n    getKnuckleName, \n    getGestureKey,\n    getLetterForGesture,\n    getFingerTipIndices,\n    getKnuckleIndices\n} from '../config/gestureMappings.js'\n\nexport class GestureDetector {\n    constructor(config = {}) {\n        this.config = {\n            // touchDistance: 0.04,\n            // gestureTimeout: 200,\n            ...config\n        }\n        \n        this.lastDetectedGestures = new Map()\n        this.worker = null\n        \n        // Initialize web worker for distance calculations\n        this.initWorker()\n    }\n    \n    updateConfig(newConfig) {\n        this.config = { ...this.config, ...newConfig }\n    }\n    \n    initWorker() {\n        try {\n            const workerCode = `\n                self.onmessage = function(e) {\n                    const { landmarks, fingerTips, knuckles, touchDistance } = e.data;\n                    const results = [];\n                    \n                    for (let i = 0; i < fingerTips.length; i++) {\n                        const fingerTipIndex = fingerTips[i];\n                        const fingerTip = landmarks[fingerTipIndex];\n                        \n                        for (let j = 0; j < knuckles.length; j++) {\n                            const knuckleIndex = knuckles[j];\n                            const knuckle = landmarks[knuckleIndex];\n                            \n                            // Calculate 3D Euclidean distance\n                            const dx = fingerTip.x - knuckle.x;\n                            const dy = fingerTip.y - knuckle.y;\n                            const dz = fingerTip.z - knuckle.z;\n                            const distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n                            \n                            if (distance < touchDistance * 2) { // Include near-touches for debug\n                                results.push({\n                                    fingerTipIndex,\n                                    knuckleIndex,\n                                    distance,\n                                    isTouch: distance < touchDistance\n                                });\n                            }\n                        }\n                    }\n                    \n                    self.postMessage(results);\n                };\n            `\n            \n            const blob = new Blob([workerCode], { type: 'application/javascript' })\n            this.worker = new Worker(URL.createObjectURL(blob))\n        } catch (error) {\n            console.warn('Web Worker not supported, using main thread for calculations')\n            this.worker = null\n        }\n    }\n    \n    async detectGestures(landmarks) {\n        const currentTime = Date.now()\n        \n        // Calculate distances (using worker if available)\n        const distanceResults = await this.calculateDistances(landmarks)\n        \n        // Process results\n        const detection = this.processDistanceResults(distanceResults, currentTime)\n        \n        return detection\n    }\n    \n    async calculateDistances(landmarks) {\n        const fingerTips = getFingerTipIndices()\n        const knuckles = getKnuckleIndices()\n        \n        if (this.worker) {\n            // Use web worker for calculations\n            return new Promise((resolve) => {\n                this.worker.onmessage = (e) => resolve(e.data)\n                this.worker.postMessage({\n                    landmarks,\n                    fingerTips,\n                    knuckles,\n                    touchDistance: this.config.touchDistance\n                })\n            })\n        } else {\n            // Fallback to main thread\n            return this.calculateDistancesMainThread(landmarks, fingerTips, knuckles)\n        }\n    }\n    \n    calculateDistancesMainThread(landmarks, fingerTips, knuckles) {\n        return new Promise((resolve) => {\n            const results = [];\n            \n            for (const fingerTipIndex of fingerTips) {\n                const fingerTip = landmarks[fingerTipIndex];\n                \n                for (const knuckleIndex of knuckles) {\n                    const knuckle = landmarks[knuckleIndex];\n                    \n                    // Calculate 3D Euclidean distance\n                    const dx = fingerTip.x - knuckle.x;\n                    const dy = fingerTip.y - knuckle.y;\n                    const dz = fingerTip.z - knuckle.z;\n                    const distance = Math.sqrt(dx*dx + dy*dy + dz*dz);\n                    \n                    if (distance < this.config.touchDistance * 2) {\n                        results.push({\n                            fingerTipIndex,\n                            knuckleIndex,\n                            distance,\n                            isTouch: distance < this.config.touchDistance\n                        });\n                    }\n                }\n            }\n            \n            // To better mimic the worker's asynchronous behavior, \n            // use setTimeout with 0ms delay to push to next event loop cycle\n            setTimeout(() => resolve(results), 0);\n        });\n    }\n    \n    processDistanceResults(distanceResults, currentTime) {\n        // Find the closest valid gesture\n        let bestGesture = null\n        let shortestDistance = this.config.touchDistance\n        \n        // Sort by distance for debug info\n        const sortedResults = distanceResults.sort((a, b) => a.distance - b.distance)\n        \n        // Find valid touches\n        const validTouches = sortedResults.filter(result => {\n            const gestureKey = getGestureKey(result.fingerTipIndex, result.knuckleIndex)\n            return result.isTouch && gestureKey in GESTURE_MAPPINGS.ALL_GESTURES\n        })\n        \n        // Check for the best gesture (closest touch that's not in cooldown)\n        for (const result of validTouches) {\n            const gestureKey = getGestureKey(result.fingerTipIndex, result.knuckleIndex)\n            \n            // Check cooldown\n            //const lastDetected = this.lastDetectedGestures.get(gestureKey)\n            //if (!lastDetected || currentTime - lastDetected > this.config.gestureTimeout) {\n                if (result.distance < shortestDistance) {\n                    bestGesture = {\n                        gesture: gestureKey,\n                        distance: result.distance,\n                        fingerTipIndex: result.fingerTipIndex,\n                        knuckleIndex: result.knuckleIndex\n                    }\n                    shortestDistance = result.distance\n                }\n            //}\n        }\n        \n        // If we found a gesture, update its timestamp\n        if (bestGesture) {\n            this.lastDetectedGestures.set(bestGesture.gesture, currentTime)\n            \n            const letter = getLetterForGesture(bestGesture.gesture)\n            const fingerName = getFingerName(bestGesture.fingerTipIndex)\n            const knuckleName = getKnuckleName(bestGesture.knuckleIndex)\n            \n            return {\n                gesture: bestGesture.gesture,\n                letter,\n                distance: bestGesture.distance,\n                fingerName,\n                knuckleName,\n                touches: this.createTouchesSet(sortedResults)\n            }\n        }\n        \n        return {\n            gesture: null,\n            letter: null,\n            distance: null,\n            fingerName: null,\n            knuckleName: null,\n            touches: this.createTouchesSet(sortedResults)\n        }\n    }\n    \n    createTouchesSet(distanceResults) {\n        const touches = new Set()\n        \n        distanceResults.forEach(result => {\n            const fingerName = getFingerName(result.fingerTipIndex)\n            const knuckleName = getKnuckleName(result.knuckleIndex)\n            touches.add(`${fingerName} → ${knuckleName}: ${result.distance.toFixed(4)}`)\n        })\n        \n        return touches\n    }\n    \n    getDebugInfo(landmarks) {\n        // Get all distance calculations for debug display\n        const fingerTips = getFingerTipIndices()\n        const knuckles = getKnuckleIndices()\n        const closePairs = []\n        \n        for (const fingerTipIndex of fingerTips) {\n            const fingerTip = landmarks[fingerTipIndex]\n            \n            for (const knuckleIndex of knuckles) {\n                const knuckle = landmarks[knuckleIndex]\n                \n                const dx = fingerTip.x - knuckle.x\n                const dy = fingerTip.y - knuckle.y\n                const dz = fingerTip.z - knuckle.z\n                const distance = Math.sqrt(dx*dx + dy*dy + dz*dz)\n                \n                if (distance < this.config.touchDistance * 1.5) {\n                    const gestureKey = getGestureKey(fingerTipIndex, knuckleIndex)\n                    const letter = getLetterForGesture(gestureKey)\n                    \n                    closePairs.push({\n                        fingerTip,\n                        knuckle,\n                        distance,\n                        fingerName: getFingerName(fingerTipIndex),\n                        knuckleName: getKnuckleName(knuckleIndex),\n                        gestureKey,\n                        hasMapping: !!letter,\n                        letter: letter || '?',\n                        isActive: distance < this.config.touchDistance\n                    })\n                }\n            }\n        }\n        \n        // Sort by distance for better debugging\n        closePairs.sort((a, b) => a.distance - b.distance)\n        \n        return { closePairs }\n    }\n    \n    // Clean up old gesture timestamps to prevent memory leaks\n    cleanupOldGestures(currentTime) {\n        const cutoffTime = currentTime - (this.config.gestureTimeout * 10) // Keep 10x timeout\n        \n        for (const [gesture, timestamp] of this.lastDetectedGestures.entries()) {\n            if (timestamp < cutoffTime) {\n                this.lastDetectedGestures.delete(gesture)\n            }\n        }\n    }\n    \n    // Get statistics about gesture detection\n    getStats() {\n        return {\n            trackedGestures: this.lastDetectedGestures.size,\n            totalMappings: Object.keys(GESTURE_MAPPINGS.ALL_GESTURES).length,\n            config: { ...this.config }\n        }\n    }\n    \n    // Reset gesture detection state\n    reset() {\n        this.lastDetectedGestures.clear()\n    }\n    \n    // Cleanup method\n    destroy() {\n        if (this.worker) {\n            this.worker.terminate()\n            this.worker = null\n        }\n        this.reset()\n    }\n}\n","// src/components/HandGestureTypingSystem.js\nimport { HandLandmarker, FilesetResolver, DrawingUtils } from '@mediapipe/tasks-vision'\nimport { GESTURE_MAPPINGS } from '../config/gestureMappings.js'\nimport { Camera } from '../utils/Camera.js'\nimport { PerformanceMonitor } from '../utils/PerformanceMonitor.js'\nimport { SnapshotManager } from '../utils/SnapshotManager.js'\nimport { GestureDetector } from '../utils/GestureDetector.js'\n\nexport class HandGestureTypingSystem {\n    constructor() {\n        // DOM elements\n        this.videoElement = document.getElementById('video-input')\n        this.canvasElement = document.getElementById('canvas-output')\n        this.canvasCtx = this.canvasElement.getContext('2d')\n        this.textOutput = document.getElementById('text-output')\n        this.statusElement = document.getElementById('status')\n        this.keyMapGrid = document.getElementById('key-map-grid')\n        \n        // MediaPipe components\n        this.handLandmarker = null\n        this.vision = null\n        this.camera = null\n        this.drawingUtils = null\n        \n        // Application state\n        this.detectionEnabled = true\n        this.debugMode = import.meta.env.DEV // Enable debug mode in development\n        \n        // Configuration\n        this.config = {\n            touchDistance: 0.04,\n            gestureTimeout: 200, // ms\n            handSpeedThreshold: 0.02,\n            maxNumHands: 1,\n            minHandDetectionConfidence: 0.5,\n            minHandPresenceConfidence: 0.5,\n            minTrackingConfidence: 0.5\n        }\n        \n        // Utility classes\n        this.performanceMonitor = new PerformanceMonitor()\n        this.snapshotManager = new SnapshotManager(this)\n        this.gestureDetector = new GestureDetector(this.config)\n        \n        // State tracking\n        this.previousHandPosition = null\n        this.currentActiveGesture = null\n        this.lastDetectedGestures = {}\n        this.currentTouches = new Set()\n        this.lastDebugTime = 0\n        \n        // Debug gesture mappings on startup\n        console.log('🚀 HandGestureTypingSystem initialized with MediaPipe Tasks Vision')\n        console.log('📊 Configuration:', this.config)\n        \n        // Log some key mappings for verification\n        import('../config/gestureMappings.js').then(module => {\n            const thumbRingMCP = `${module.FINGER_TIPS.THUMB}_${module.KNUCKLES.RING_MCP}`\n            const thumbPinkyMCP = `${module.FINGER_TIPS.THUMB}_${module.KNUCKLES.PINKY_MCP}`\n            \n            console.log('🗝️ Key Mappings Check:')\n            console.log(`  THUMB → RING_MCP: \"${module.ALL_GESTURES[thumbRingMCP] || 'NOT FOUND'}\"`)\n            console.log(`  THUMB → PINKY_MCP: \"${module.ALL_GESTURES[thumbPinkyMCP] || 'NOT FOUND'}\"`)\n            console.log(`  Total mappings: ${Object.keys(module.ALL_GESTURES).length}`)\n            console.log('🎯 System optimized to only detect mapped combinations!')\n        })\n        \n        // Initialize components\n        this.setupEventListeners()\n        this.initKeyMap()\n    }\n    \n    async init() {\n        try {\n            this.updateStatus('Initializing MediaPipe Tasks Vision...', 'status')\n            \n            // Initialize MediaPipe Vision\n            this.vision = await FilesetResolver.forVisionTasks(\n                \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.8/wasm\"\n            )\n            \n            // Create hand landmarker\n            this.handLandmarker = await HandLandmarker.createFromOptions(this.vision, {\n                baseOptions: {\n                    modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task\",\n                    delegate: \"GPU\"\n                },\n                runningMode: \"VIDEO\",\n                numHands: this.config.maxNumHands,\n                minHandDetectionConfidence: this.config.minHandDetectionConfidence,\n                minHandPresenceConfidence: this.config.minHandPresenceConfidence,\n                minTrackingConfidence: this.config.minTrackingConfidence\n            })\n            \n            // Initialize drawing utils\n            this.drawingUtils = new DrawingUtils(this.canvasCtx)\n            \n            this.updateStatus('Starting camera...', 'status')\n            \n            // Initialize camera\n            this.camera = new Camera(this.videoElement, {\n                onFrame: async () => {\n                    if (this.handLandmarker && this.detectionEnabled) {\n                        try {\n                            await this.detectHands()\n                        } catch (error) {\n                            console.error('Error in hand detection:', error)\n                            this.updateStatus('Hand detection error - retrying...', 'status warning')\n                        }\n                    }\n                },\n                width: 640,\n                height: 480\n            })\n            \n            await this.camera.start()\n            \n            // Ensure canvas size matches video\n            this.canvasElement.width = this.videoElement.videoWidth || 640\n            this.canvasElement.height = this.videoElement.videoHeight || 480\n            \n            this.updateStatus('✅ Ready to detect gestures! Touch fingertips to knuckles to type.', 'status success')\n            \n            // Start performance monitoring\n            this.performanceMonitor.start()\n            \n            // Check lighting after a delay\n            setTimeout(() => this.checkLighting(), 2000)\n            \n        } catch (error) {\n            console.error('Initialization error:', error)\n            this.updateStatus(`❌ Initialization failed: ${error.message}`, 'status warning')\n            \n            // Provide helpful error messages\n            if (error.message.includes('FilesetResolver')) {\n                this.updateStatus('❌ MediaPipe Tasks Vision failed to load. Please check your internet connection.', 'status warning')\n            } else if (error.message.includes('camera')) {\n                this.updateStatus('❌ Camera access denied. Please allow camera permissions and refresh.', 'status warning')\n            }\n            \n            throw error\n        }\n    }\n    \n    async detectHands() {\n        if (!this.videoElement.videoWidth || !this.videoElement.videoHeight) {\n            return\n        }\n        \n        const startTimeMs = performance.now()\n        \n        // Detect hand landmarks\n        const results = this.handLandmarker.detectForVideo(this.videoElement, startTimeMs)\n        \n        // Process results\n        this.onResults(results)\n    }\n    \n    onResults(results) {\n        this.performanceMonitor.recordFrame()\n        \n        // Clear canvas\n        this.canvasCtx.save()\n        this.canvasCtx.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height)\n        \n        if (results.landmarks && results.landmarks.length > 0) {\n            const landmarks = results.landmarks[0] // Using first hand only\n            \n            // Validate landmarks before processing\n            if (!landmarks || !Array.isArray(landmarks) || landmarks.length < 21) {\n                console.warn('Invalid landmarks received:', landmarks)\n                this.updateStatus('⚠️ Invalid hand data received', 'status warning')\n                this.canvasCtx.restore()\n                return\n            }\n            \n            // Check hand stability\n            const handCenter = this.calculateHandCenter(landmarks)\n            const handIsStable = this.isHandStable(handCenter)\n            \n            // Draw hand landmarks and connections\n            this.drawHandVisualization(landmarks)\n            \n            // Debug visualization\n            if (this.debugMode) {\n                this.visualizeDebugInfo(landmarks)\n            }\n            \n            // Detect gestures\n            if (this.detectionEnabled && handIsStable) {\n                this.detectAndProcessGestures(landmarks)\n            }\n            \n            // Display performance info\n            this.displayPerformanceInfo(handIsStable)\n            \n        } else {\n            this.updateStatus('👋 Show your hand to the camera', 'status')\n            this.currentActiveGesture = null\n        }\n        \n        this.canvasCtx.restore()\n    }\n    \n    drawHandVisualization(landmarks) {\n        try {\n            // Use MediaPipe Tasks Vision drawing utilities\n            if (this.drawingUtils) {\n                // Draw hand connections\n                this.drawingUtils.drawConnectors(\n                    landmarks,\n                    HandLandmarker.HAND_CONNECTIONS,\n                    { color: '#00FF00', lineWidth: 2 }\n                )\n                \n                // Draw landmarks\n                this.drawingUtils.drawLandmarks(\n                    landmarks,\n                    { color: '#FF0000', lineWidth: 1, radius: 3 }\n                )\n            } else {\n                console.warn('Drawing utilities not available, using fallback')\n                this.drawHandLandmarksFallback(landmarks)\n            }\n        } catch (error) {\n            console.warn('Error drawing with MediaPipe utilities:', error)\n            // Fallback to manual drawing\n            this.drawHandLandmarksFallback(landmarks)\n        }\n    }\n    \n    drawHandLandmarksFallback(landmarks) {\n        // Fallback manual drawing\n        this.canvasCtx.fillStyle = '#FF0000'\n        landmarks.forEach(landmark => {\n            this.canvasCtx.beginPath()\n            this.canvasCtx.arc(\n                landmark.x * this.canvasElement.width,\n                landmark.y * this.canvasElement.height,\n                3, 0, 2 * Math.PI\n            )\n            this.canvasCtx.fill()\n        })\n    }\n    \n    setupEventListeners() {\n        // Control buttons\n        document.getElementById('clear-btn')?.addEventListener('click', () => {\n            this.textOutput.textContent = ''\n        })\n        \n        document.getElementById('space-btn')?.addEventListener('click', () => {\n            this.textOutput.textContent += ' '\n        })\n        \n        document.getElementById('backspace-btn')?.addEventListener('click', () => {\n            this.textOutput.textContent = this.textOutput.textContent.slice(0, -1)\n        })\n        \n        // Create additional controls\n        this.createAdvancedControls()\n    }\n    \n    createAdvancedControls() {\n        const controlsDiv = document.querySelector('.controls')\n        \n        // Toggle detection button\n        const toggleBtn = document.createElement('button')\n        toggleBtn.id = 'toggle-btn'\n        toggleBtn.textContent = '⏸️ Pause Detection'\n        toggleBtn.addEventListener('click', () => this.toggleDetection())\n        controlsDiv.appendChild(toggleBtn)\n        \n        // Sensitivity control\n        const sensitivityDiv = document.createElement('div')\n        sensitivityDiv.style.cssText = 'margin: 10px 0; text-align: center; width: 100%;'\n        sensitivityDiv.innerHTML = `\n            <label for=\"sensitivity-slider\" style=\"display: block; margin-bottom: 5px; font-weight: 500;\">\n                Touch Sensitivity: <span id=\"sensitivity-value\">${this.config.touchDistance.toFixed(3)}</span>\n            </label>\n            <input type=\"range\" id=\"sensitivity-slider\" \n                   min=\"0.01\" max=\"0.15\" step=\"0.01\" \n                   value=\"${this.config.touchDistance}\" \n                   style=\"width: 80%; margin: 0 auto;\">\n        `\n        controlsDiv.appendChild(sensitivityDiv)\n        \n        // Sensitivity slider event\n        const slider = document.getElementById('sensitivity-slider')\n        const valueDisplay = document.getElementById('sensitivity-value')\n        \n        slider.addEventListener('input', (e) => {\n            this.config.touchDistance = parseFloat(e.target.value)\n            this.gestureDetector.updateConfig(this.config)\n            valueDisplay.textContent = this.config.touchDistance.toFixed(3)\n            this.updateStatus(`Sensitivity: ${this.config.touchDistance.toFixed(3)}`, 'status')\n        })\n        \n        // Debug toggle button with enhanced functionality\n        const debugBtn = document.createElement('button')\n        debugBtn.id = 'debug-btn'\n        debugBtn.textContent = this.debugMode ? '🐛 Debug: ON' : '🐛 Debug: OFF'\n        debugBtn.style.backgroundColor = this.debugMode ? '#27ae60' : '#e74c3c'\n        debugBtn.addEventListener('click', () => this.toggleDebugMode())\n        \n        // Add double-click for gesture mapping debug\n        debugBtn.addEventListener('dblclick', () => {\n            console.log('🔍 Running gesture mapping debug...')\n            import('../config/gestureMappings.js').then(module => {\n                if (module.debugGestureMapping) {\n                    module.debugGestureMapping()\n                }\n            })\n        })\n        \n        controlsDiv.appendChild(debugBtn)\n        \n        // Snapshot button with dropdown\n        const snapshotContainer = document.createElement('div')\n        snapshotContainer.style.position = 'relative'\n        snapshotContainer.style.display = 'inline-block'\n        \n        const snapshotBtn = document.createElement('button')\n        snapshotBtn.id = 'snapshot-btn'\n        snapshotBtn.textContent = '📸 Snapshot'\n        snapshotBtn.style.backgroundColor = '#9b59b6'\n        snapshotBtn.addEventListener('click', () => this.takeSnapshot())\n        \n        // Add right-click or long-press for options\n        snapshotBtn.addEventListener('contextmenu', (e) => {\n            e.preventDefault()\n            this.showSnapshotMenu(e)\n        })\n        \n        snapshotContainer.appendChild(snapshotBtn)\n        controlsDiv.appendChild(snapshotContainer)\n    }\n    \n    showSnapshotMenu(event) {\n        // Create context menu for snapshot options\n        const menu = document.createElement('div')\n        menu.style.cssText = `\n            position: fixed;\n            top: ${event.clientY}px;\n            left: ${event.clientX}px;\n            background: white;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n            z-index: 10000;\n            min-width: 150px;\n        `\n        \n        const option1 = document.createElement('div')\n        option1.textContent = '🎯 With Overlay'\n        option1.style.cssText = 'padding: 10px; cursor: pointer; border-bottom: 1px solid #eee;'\n        option1.addEventListener('click', () => {\n            this.takeSnapshot()\n            document.body.removeChild(menu)\n        })\n        \n        const option2 = document.createElement('div')\n        option2.textContent = '📹 Video Only'\n        option2.style.cssText = 'padding: 10px; cursor: pointer;'\n        option2.addEventListener('click', () => {\n            this.snapshotManager.takeVideoOnlySnapshot()\n            document.body.removeChild(menu)\n        })\n        \n        // Hover effects\n        ;[option1, option2].forEach(option => {\n            option.addEventListener('mouseenter', () => {\n                option.style.backgroundColor = '#f0f0f0'\n            })\n            option.addEventListener('mouseleave', () => {\n                option.style.backgroundColor = 'white'\n            })\n        })\n        \n        menu.appendChild(option1)\n        menu.appendChild(option2)\n        document.body.appendChild(menu)\n        \n        // Remove menu when clicking elsewhere\n        setTimeout(() => {\n            const removeMenu = (e) => {\n                if (!menu.contains(e.target)) {\n                    document.body.removeChild(menu)\n                    document.removeEventListener('click', removeMenu)\n                }\n            }\n            document.addEventListener('click', removeMenu)\n        }, 100)\n    }\n    \n    initKeyMap() {\n        // Populate the key mapping display\n        Object.entries(GESTURE_MAPPINGS.ALL_GESTURES).forEach(([gestureKey, letter]) => {\n            const [fingerTipIndex, knuckleIndex] = gestureKey.split('_')\n            \n            const fingerName = Object.keys(GESTURE_MAPPINGS.FINGER_TIPS)\n                .find(key => GESTURE_MAPPINGS.FINGER_TIPS[key] == fingerTipIndex)\n            const knuckleName = Object.keys(GESTURE_MAPPINGS.KNUCKLES)\n                .find(key => GESTURE_MAPPINGS.KNUCKLES[key] == knuckleIndex)\n            \n            const item = document.createElement('div')\n            item.className = 'key-map-item'\n            item.innerHTML = `\n                <span>${letter}</span>\n                <div>\n                    <strong>${fingerName?.replace('_', ' ')}</strong> tip → \n                    <strong>${knuckleName?.replace(/_/g, ' ')}</strong>\n                </div>\n            `\n            \n            this.keyMapGrid.appendChild(item)\n        })\n    }\n    \n    visualizeDebugInfo(landmarks) {\n        const debugInfo = this.gestureDetector.getDebugInfo(landmarks)\n        \n        // Draw distance lines and labels\n        debugInfo.closePairs.forEach(pair => {\n            this.drawDistanceLine(pair)\n        })\n        \n        // Update debug text\n        this.updateDebugDisplay(debugInfo)\n    }\n    \n    drawDistanceLine(pair) {\n        const { fingerTip, knuckle, distance, isActive, letter } = pair\n        \n        const startX = fingerTip.x * this.canvasElement.width\n        const startY = fingerTip.y * this.canvasElement.height\n        const endX = knuckle.x * this.canvasElement.width\n        const endY = knuckle.y * this.canvasElement.height\n        \n        // Color based on proximity to threshold\n        const ratio = distance / this.config.touchDistance\n        const color = isActive ? '#00FF00' : `rgb(${Math.min(255, 100 + ratio * 155)}, ${Math.max(0, 255 - ratio * 255)}, 0)`\n        \n        // Draw line\n        this.canvasCtx.strokeStyle = color\n        this.canvasCtx.lineWidth = isActive ? 3 : 1\n        this.canvasCtx.beginPath()\n        this.canvasCtx.moveTo(startX, startY)\n        this.canvasCtx.lineTo(endX, endY)\n        this.canvasCtx.stroke()\n        \n        // Draw label if active\n        if (isActive) {\n            const midX = (startX + endX) / 2\n            const midY = (startY + endY) / 2\n            \n            this.canvasCtx.fillStyle = 'rgba(255, 255, 255, 0.9)'\n            this.canvasCtx.fillRect(midX - 20, midY - 15, 40, 30)\n            this.canvasCtx.fillStyle = 'black'\n            this.canvasCtx.font = '12px Arial'\n            this.canvasCtx.textAlign = 'center'\n            this.canvasCtx.fillText(letter, midX, midY + 5)\n            this.canvasCtx.textAlign = 'left'\n        }\n    }\n    \n    async detectAndProcessGestures(landmarks) {\n        // Enhanced debugging - only run detection every few frames to avoid spam\n        const now = Date.now()\n        if (!this.lastDebugTime || now - this.lastDebugTime > 1000) { // Debug every second\n            this.lastDebugTime = now\n            console.log('🔍 Running gesture detection with enhanced debugging...')\n        }\n        \n        try {\n            // Await the Promise returned by detectGestures\n            const detection = await this.gestureDetector.detectGestures(landmarks)\n            \n            // Check if detection contains valid gesture information\n            if (detection && detection.gesture && detection.gesture !== this.currentActiveGesture) {\n                console.log(`🎯 Processing new gesture: ${detection.gesture} = \"${detection.letter}\"`)\n                this.processNewGesture(detection)\n            } else if (detection && !detection.gesture && this.currentActiveGesture) {\n                console.log('🔄 Clearing current active gesture')\n                this.currentActiveGesture = null\n            }\n            \n            // Update current touches for snapshots\n            this.currentTouches = detection ? detection.touches : new Set()\n        } catch (error) {\n            console.error('Error in gesture detection:', error)\n        }\n    }\n    \n    processNewGesture(detection) {\n        const { gesture, letter, distance, fingerName, knuckleName } = detection\n        \n        // Add letter to output\n        this.addLetter(letter)\n        \n        // Update status\n        this.updateStatus(\n            `✋ ${fingerName} → ${knuckleName} = \"${letter}\" (${distance.toFixed(3)})`,\n            'status success'\n        )\n        \n        // Visual feedback\n        this.flashGestureDetection()\n        \n        // Update state\n        this.currentActiveGesture = gesture\n        this.lastDetectedGestures[gesture] = Date.now()\n    }\n    \n    calculateHandCenter(landmarks) {\n        // Validate landmarks array\n        if (!landmarks || !Array.isArray(landmarks) || landmarks.length < 21) {\n            console.warn('Invalid landmarks array:', landmarks)\n            return { x: 0, y: 0, z: 0 }\n        }\n        \n        const wrist = landmarks[0]\n        const middleMCP = landmarks[GESTURE_MAPPINGS.KNUCKLES.MIDDLE_MCP]\n        \n        // Validate landmark objects\n        if (!wrist || !middleMCP || \n            typeof wrist.x !== 'number' || typeof middleMCP.x !== 'number') {\n            console.warn('Invalid landmark structure:', { wrist, middleMCP })\n            return { x: 0, y: 0, z: 0 }\n        }\n        \n        return {\n            x: (wrist.x + middleMCP.x) / 2,\n            y: (wrist.y + middleMCP.y) / 2,\n            z: (wrist.z + middleMCP.z) / 2\n        }\n    }\n    \n    isHandStable(handCenter) {\n        if (!this.previousHandPosition) {\n            this.previousHandPosition = handCenter\n            return true\n        }\n        \n        const distance = Math.sqrt(\n            Math.pow(handCenter.x - this.previousHandPosition.x, 2) +\n            Math.pow(handCenter.y - this.previousHandPosition.y, 2) +\n            Math.pow(handCenter.z - this.previousHandPosition.z, 2)\n        )\n        \n        this.previousHandPosition = handCenter\n        return distance < this.config.handSpeedThreshold\n    }\n    \n    displayPerformanceInfo(handIsStable) {\n        const fps = this.performanceMonitor.getFPS()\n        \n        this.canvasCtx.fillStyle = 'rgba(0, 0, 0, 0.7)'\n        this.canvasCtx.fillRect(10, 10, 220, 50)\n        this.canvasCtx.font = '12px Arial'\n        this.canvasCtx.fillStyle = 'white'\n        this.canvasCtx.fillText(`FPS: ${fps}`, 15, 25)\n        this.canvasCtx.fillText(`Hand: ${handIsStable ? '✅ Stable' : '⚠️ Moving'}`, 15, 40)\n        this.canvasCtx.fillText(`Active: ${this.currentActiveGesture || 'none'}`, 15, 55)\n    }\n    \n    updateDebugDisplay(debugInfo) {\n        let debugDiv = document.getElementById('debug-info')\n        if (!debugDiv) {\n            debugDiv = document.createElement('div')\n            debugDiv.id = 'debug-info'\n            debugDiv.style.cssText = `\n                background: #f8f9fa;\n                border: 1px solid #dee2e6;\n                border-radius: 8px;\n                padding: 10px;\n                margin: 10px 0;\n                font-family: monospace;\n                font-size: 12px;\n                white-space: pre-wrap;\n            `\n            \n            const container = document.querySelector('.container')\n            container.insertBefore(debugDiv, this.keyMapGrid.parentElement)\n        }\n        \n        if (debugInfo.closePairs.length === 0) {\n            debugDiv.textContent = 'Debug Info: No mapped gestures within detection range'\n            return\n        }\n        \n        const debugText = debugInfo.closePairs\n            .slice(0, 5) // Show top 5 closest mapped pairs\n            .map(pair => `${pair.fingerName} → ${pair.knuckleName}: ${pair.distance.toFixed(4)} = \"${pair.letter}\" ${pair.isActive ? '✓ ACTIVE' : ''}`)\n            .join('\\n')\n        \n        debugDiv.textContent = `Debug Info (Mapped gestures only):\\n${debugText}`\n    }\n    \n    flashGestureDetection(color = 'rgba(0, 255, 0, 0.3)') {\n        const overlay = document.createElement('div')\n        overlay.style.cssText = `\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: ${color};\n            pointer-events: none;\n            z-index: 10;\n            opacity: 0.7;\n            transition: opacity 0.3s ease-out;\n        `\n        \n        const videoContainer = document.querySelector('.video-container')\n        videoContainer.appendChild(overlay)\n        \n        setTimeout(() => {\n            overlay.style.opacity = '0'\n            setTimeout(() => {\n                if (overlay.parentNode) {\n                    overlay.parentNode.removeChild(overlay)\n                }\n            }, 300)\n        }, 100)\n    }\n    \n    addLetter(letter) {\n        this.textOutput.textContent += letter\n        \n        // Auto-scroll to bottom if needed\n        this.textOutput.scrollTop = this.textOutput.scrollHeight\n    }\n    \n    updateStatus(message, className = 'status') {\n        this.statusElement.textContent = message\n        this.statusElement.className = className\n    }\n    \n    async checkLighting() {\n        try {\n            const canvas = document.createElement('canvas')\n            const context = canvas.getContext('2d')\n            canvas.width = 50\n            canvas.height = 50\n            \n            context.drawImage(this.videoElement, 0, 0, 50, 50)\n            const imageData = context.getImageData(0, 0, 50, 50).data\n            \n            let sum = 0\n            for (let i = 0; i < imageData.length; i += 4) {\n                sum += (imageData[i] + imageData[i + 1] + imageData[i + 2]) / 3\n            }\n            const avgBrightness = sum / (imageData.length / 4)\n            \n            if (avgBrightness < 50) {\n                this.showLightingWarning()\n            }\n        } catch (error) {\n            console.warn('Could not check lighting conditions:', error)\n        }\n    }\n    \n    showLightingWarning() {\n        const warningDiv = document.createElement('div')\n        warningDiv.style.cssText = `\n            background: linear-gradient(45deg, #ffe082, #ffcc02);\n            color: #5d4037;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            text-align: center;\n            font-weight: 500;\n            box-shadow: 0 2px 10px rgba(255, 204, 2, 0.3);\n        `\n        warningDiv.innerHTML = '💡 <strong>Low light detected!</strong> Hand detection works best in bright lighting conditions.'\n        \n        const container = document.querySelector('.container')\n        container.insertBefore(warningDiv, this.videoElement.parentElement)\n        \n        // Auto-remove after 10 seconds\n        setTimeout(() => {\n            if (warningDiv.parentNode) {\n                warningDiv.parentNode.removeChild(warningDiv)\n            }\n        }, 10000)\n    }\n    \n    // Public methods for external control\n    toggleDetection() {\n        this.detectionEnabled = !this.detectionEnabled\n        const toggleBtn = document.getElementById('toggle-btn')\n        \n        if (toggleBtn) {\n            toggleBtn.textContent = this.detectionEnabled ? '⏸️ Pause Detection' : '▶️ Resume Detection'\n            toggleBtn.style.backgroundColor = this.detectionEnabled ? '#e74c3c' : '#27ae60'\n        }\n        \n        this.updateStatus(\n            this.detectionEnabled ? '✅ Detection enabled' : '⏸️ Detection paused',\n            this.detectionEnabled ? 'status success' : 'status warning'\n        )\n    }\n    \n    toggleDebugMode() {\n        this.debugMode = !this.debugMode\n        const debugBtn = document.getElementById('debug-btn')\n        \n        if (debugBtn) {\n            debugBtn.textContent = this.debugMode ? '🐛 Debug: ON' : '🐛 Debug: OFF'\n            debugBtn.style.backgroundColor = this.debugMode ? '#27ae60' : '#e74c3c'\n        }\n        \n        // Remove debug display if turning off\n        if (!this.debugMode) {\n            const debugDiv = document.getElementById('debug-info')\n            if (debugDiv) {\n                debugDiv.remove()\n            }\n        }\n        \n        this.updateStatus(`Debug mode ${this.debugMode ? 'enabled' : 'disabled'}`, 'status')\n    }\n    \n    takeSnapshot() {\n        console.log('🖱️ Snapshot button clicked')\n        try {\n            this.snapshotManager.takeSnapshot()\n        } catch (error) {\n            console.error('🖱️ Error in takeSnapshot method:', error)\n            this.updateStatus(`Snapshot failed: ${error.message}`, 'status warning')\n        }\n    }\n    \n    pauseDetection() {\n        if (this.detectionEnabled) {\n            this.detectionEnabled = false\n            this.updateStatus('⏸️ Detection paused (page not visible)', 'status warning')\n        }\n    }\n    \n    resumeDetection() {\n        if (!this.detectionEnabled) {\n            this.detectionEnabled = true\n            this.updateStatus('▶️ Detection resumed', 'status success')\n        }\n    }\n    \n    // Cleanup method\n    destroy() {\n        if (this.camera) {\n            this.camera.stop()\n        }\n        \n        if (this.handLandmarker) {\n            this.handLandmarker.close()\n        }\n        \n        this.performanceMonitor.stop()\n        \n        // Remove event listeners\n        window.removeEventListener('beforeunload', this.destroy.bind(this))\n    }\n}\n","// src/utils/systemCheck.js\n\nexport function showStartupMessage() {\n    const statusElement = document.getElementById('status')\n    if (statusElement) {\n        statusElement.textContent = '🚀 Initializing Hand Gesture Typing System...'\n        statusElement.className = 'status'\n    }\n}\n\nexport async function checkSystemCompatibility() {\n    const issues = []\n    let isCompatible = true\n    \n    try {\n        // Check for required APIs\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n            issues.push('Camera access not supported')\n            isCompatible = false\n        }\n        \n        // Check for WebGL support (important for MediaPipe)\n        const canvas = document.createElement('canvas')\n        const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl')\n        if (!gl) {\n            issues.push('WebGL not supported - performance may be degraded')\n        }\n        \n        // Check for Web Workers support\n        if (typeof Worker === 'undefined') {\n            issues.push('Web Workers not supported - will use main thread processing')\n        }\n        \n        // Check camera permissions\n        try {\n            const permissionStatus = await checkCameraPermissions()\n            if (!permissionStatus.granted && permissionStatus.state === 'denied') {\n                issues.push('Camera permissions denied')\n                isCompatible = false\n            }\n        } catch (error) {\n            console.warn('Could not check camera permissions:', error)\n        }\n        \n        // Check browser compatibility\n        const browserInfo = getBrowserInfo()\n        if (browserInfo.isUnsupported) {\n            issues.push(`Browser may not be fully supported: ${browserInfo.name}`)\n        }\n        \n        // Check performance capabilities\n        const performanceInfo = await checkPerformanceCapabilities()\n        if (performanceInfo.isLowEnd) {\n            issues.push('Low-end device detected - consider reducing video quality')\n        }\n        \n        // Check network connectivity (for MediaPipe models)\n        const networkInfo = await checkNetworkConnectivity()\n        if (!networkInfo.isOnline) {\n            issues.push('No internet connection - MediaPipe models may not load')\n            isCompatible = false\n        }\n        \n    } catch (error) {\n        console.error('System compatibility check failed:', error)\n        issues.push('System compatibility check failed')\n    }\n    \n    return {\n        isCompatible,\n        issues,\n        recommendations: generateRecommendations(issues)\n    }\n}\n\nasync function checkCameraPermissions() {\n    try {\n        if (navigator.permissions) {\n            const permission = await navigator.permissions.query({ name: 'camera' })\n            return {\n                state: permission.state,\n                granted: permission.state === 'granted'\n            }\n        }\n        return { state: 'unknown', granted: false }\n    } catch (error) {\n        return { state: 'unknown', granted: false }\n    }\n}\n\nfunction getBrowserInfo() {\n    const userAgent = navigator.userAgent.toLowerCase()\n    let name = 'Unknown'\n    let isUnsupported = false\n    \n    if (userAgent.includes('chrome')) {\n        name = 'Chrome'\n    } else if (userAgent.includes('firefox')) {\n        name = 'Firefox'\n    } else if (userAgent.includes('safari')) {\n        name = 'Safari'\n    } else if (userAgent.includes('edge')) {\n        name = 'Edge'\n    } else {\n        name = 'Unknown Browser'\n        isUnsupported = true\n    }\n    \n    // Check for mobile browsers\n    const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent)\n    if (isMobile) {\n        name += ' (Mobile)'\n        // Mobile browsers may have limited MediaPipe support\n        isUnsupported = true\n    }\n    \n    return { name, isUnsupported, isMobile }\n}\n\nasync function checkPerformanceCapabilities() {\n    let isLowEnd = false\n    \n    try {\n        // Check hardware concurrency (CPU cores)\n        const cores = navigator.hardwareConcurrency || 1\n        if (cores < 4) {\n            isLowEnd = true\n        }\n        \n        // Check available memory (if supported)\n        if (navigator.deviceMemory && navigator.deviceMemory < 4) {\n            isLowEnd = true\n        }\n        \n        // Basic performance test\n        const start = performance.now()\n        for (let i = 0; i < 100000; i++) {\n            Math.random()\n        }\n        const duration = performance.now() - start\n        \n        if (duration > 10) { // If basic operations are slow\n            isLowEnd = true\n        }\n        \n    } catch (error) {\n        console.warn('Performance check failed:', error)\n    }\n    \n    return { isLowEnd }\n}\n\nasync function checkNetworkConnectivity() {\n    try {\n        // Check if online\n        const isOnline = navigator.onLine\n        \n        // Try to fetch a small resource to verify actual connectivity\n        if (isOnline) {\n            try {\n                const controller = new AbortController()\n                const timeoutId = setTimeout(() => controller.abort(), 5000)\n                \n                await fetch('https://cdn.jsdelivr.net/npm/@mediapipe/hands/hands.js', {\n                    method: 'HEAD',\n                    signal: controller.signal\n                })\n                \n                clearTimeout(timeoutId)\n                return { isOnline: true, canReachCDN: true }\n            } catch (error) {\n                return { isOnline: true, canReachCDN: false }\n            }\n        }\n        \n        return { isOnline: false, canReachCDN: false }\n    } catch (error) {\n        return { isOnline: false, canReachCDN: false }\n    }\n}\n\nfunction generateRecommendations(issues) {\n    const recommendations = []\n    \n    if (issues.some(issue => issue.includes('Camera access'))) {\n        recommendations.push('Enable camera permissions in browser settings')\n        recommendations.push('Make sure no other applications are using the camera')\n    }\n    \n    if (issues.some(issue => issue.includes('WebGL'))) {\n        recommendations.push('Update your graphics drivers')\n        recommendations.push('Try using a different browser')\n    }\n    \n    if (issues.some(issue => issue.includes('Low-end device'))) {\n        recommendations.push('Close other browser tabs and applications')\n        recommendations.push('Consider using a more powerful device')\n        recommendations.push('Reduce video resolution in settings')\n    }\n    \n    if (issues.some(issue => issue.includes('internet connection'))) {\n        recommendations.push('Check your internet connection')\n        recommendations.push('Try refreshing the page once connected')\n    }\n    \n    if (issues.some(issue => issue.includes('Browser may not be fully supported'))) {\n        recommendations.push('Use Chrome, Firefox, or Edge for best compatibility')\n        recommendations.push('Update your browser to the latest version')\n    }\n    \n    if (recommendations.length === 0) {\n        recommendations.push('System appears to be compatible!')\n    }\n    \n    return recommendations\n}\n\n// Additional utility functions for system monitoring\nexport function getSystemInfo() {\n    return {\n        userAgent: navigator.userAgent,\n        platform: navigator.platform,\n        language: navigator.language,\n        cookieEnabled: navigator.cookieEnabled,\n        onLine: navigator.onLine,\n        hardwareConcurrency: navigator.hardwareConcurrency,\n        deviceMemory: navigator.deviceMemory,\n        connection: navigator.connection ? {\n            effectiveType: navigator.connection.effectiveType,\n            downlink: navigator.connection.downlink,\n            rtt: navigator.connection.rtt\n        } : null,\n        screen: {\n            width: screen.width,\n            height: screen.height,\n            colorDepth: screen.colorDepth,\n            pixelDepth: screen.pixelDepth\n        },\n        viewport: {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n    }\n}\n\nexport function logSystemInfo() {\n    const info = getSystemInfo()\n    console.group('🖥️ System Information')\n    console.log('Platform:', info.platform)\n    console.log('User Agent:', info.userAgent)\n    console.log('CPU Cores:', info.hardwareConcurrency)\n    console.log('Device Memory:', info.deviceMemory ? `${info.deviceMemory}GB` : 'Unknown')\n    console.log('Screen Resolution:', `${info.screen.width}x${info.screen.height}`)\n    console.log('Viewport:', `${info.viewport.width}x${info.viewport.height}`)\n    console.log('Online Status:', info.onLine)\n    if (info.connection) {\n        console.log('Connection Type:', info.connection.effectiveType)\n        console.log('Download Speed:', `${info.connection.downlink}Mbps`)\n        console.log('Network RTT:', `${info.connection.rtt}ms`)\n    }\n    console.groupEnd()\n}\n\n// Performance monitoring utilities\nexport function createPerformanceObserver() {\n    if (typeof PerformanceObserver === 'undefined') {\n        return null\n    }\n    \n    try {\n        const observer = new PerformanceObserver((list) => {\n            const entries = list.getEntries()\n            entries.forEach(entry => {\n                if (entry.entryType === 'measure') {\n                    console.log(`⏱️ ${entry.name}: ${entry.duration.toFixed(2)}ms`)\n                }\n            })\n        })\n        \n        observer.observe({ entryTypes: ['measure', 'navigation'] })\n        return observer\n    } catch (error) {\n        console.warn('Performance Observer not supported:', error)\n        return null\n    }\n}\n\n// Memory usage monitoring\nexport function getMemoryInfo() {\n    if (performance.memory) {\n        return {\n            usedJSHeapSize: performance.memory.usedJSHeapSize,\n            totalJSHeapSize: performance.memory.totalJSHeapSize,\n            jsHeapSizeLimit: performance.memory.jsHeapSizeLimit,\n            usedMB: Math.round(performance.memory.usedJSHeapSize / 1048576),\n            totalMB: Math.round(performance.memory.totalJSHeapSize / 1048576),\n            limitMB: Math.round(performance.memory.jsHeapSizeLimit / 1048576)\n        }\n    }\n    return null\n}\n\nexport function logMemoryUsage() {\n    const memory = getMemoryInfo()\n    if (memory) {\n        console.log(`💾 Memory Usage: ${memory.usedMB}MB / ${memory.totalMB}MB (Limit: ${memory.limitMB}MB)`)\n    }\n}\n","// src/main.js\nimport { HandGestureTypingSystem } from './components/HandGestureTypingSystem.js'\nimport { checkSystemCompatibility, showStartupMessage } from './utils/systemCheck.js'\n\n// Initialize the application\nasync function initApp() {\n    try {\n        // Show startup message\n        showStartupMessage()\n        \n        // Check system compatibility\n        const compatibility = await checkSystemCompatibility()\n        \n        if (!compatibility.isCompatible) {\n            const statusElement = document.getElementById('status')\n            statusElement.textContent = `System compatibility issues: ${compatibility.issues.join(', ')}`\n            statusElement.className = 'status warning'\n            \n            // Still try to run but with warnings\n            console.warn('System compatibility issues detected:', compatibility.issues)\n        }\n        \n        // Initialize the main application\n        const app = new HandGestureTypingSystem()\n        await app.init()\n        \n        // Store app globally for debugging and keyboard shortcuts\n        window.handGestureApp = app\n        \n        // Set up keyboard shortcuts\n        setupKeyboardShortcuts(app)\n        \n        console.log('✅ Hand Gesture Typing System initialized successfully')\n        \n    } catch (error) {\n        console.error('❌ Failed to initialize application:', error)\n        \n        const statusElement = document.getElementById('status')\n        statusElement.textContent = `Initialization failed: ${error.message}`\n        statusElement.className = 'status warning'\n        \n        // Show detailed error information in development\n        if (import.meta.env.DEV) {\n            console.error('Detailed error:', error)\n        }\n    }\n}\n\n// Set up keyboard shortcuts for the application\nfunction setupKeyboardShortcuts(app) {\n    document.addEventListener('keydown', (event) => {\n        // Only process keyboard events if the text output isn't focused\n        if (document.activeElement !== app.textOutput) {\n            switch (event.code) {\n                case 'Space':\n                    app.textOutput.textContent += ' '\n                    event.preventDefault()\n                    break\n                    \n                case 'Backspace':\n                    app.textOutput.textContent = app.textOutput.textContent.slice(0, -1)\n                    event.preventDefault()\n                    break\n                    \n                case 'Escape':\n                    // Toggle detection on/off with Escape key\n                    app.toggleDetection()\n                    event.preventDefault()\n                    break\n                    \n                case 'KeyD':\n                    // Toggle debug mode with 'D' key\n                    if (event.ctrlKey || event.metaKey) {\n                        app.toggleDebugMode()\n                        event.preventDefault()\n                    }\n                    break\n                    \n                case 'KeyS':\n                    // Take snapshot with Ctrl/Cmd + S\n                    if (event.ctrlKey || event.metaKey) {\n                        app.takeSnapshot()\n                        event.preventDefault()\n                    }\n                    break\n            }\n        }\n    })\n    \n    // Add help text for keyboard shortcuts\n    addKeyboardShortcutsHelp()\n}\n\n// Add help information for keyboard shortcuts\nfunction addKeyboardShortcutsHelp() {\n    const helpDiv = document.createElement('div')\n    helpDiv.style.cssText = `\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        background: rgba(0, 0, 0, 0.8);\n        color: white;\n        padding: 15px;\n        border-radius: 8px;\n        font-size: 12px;\n        max-width: 250px;\n        opacity: 0.7;\n        z-index: 1000;\n        transition: opacity 0.3s ease;\n    `\n    \n    helpDiv.innerHTML = `\n        <strong>⌨️ Keyboard Shortcuts</strong><br>\n        <kbd>Space</kbd> - Add space<br>\n        <kbd>Backspace</kbd> - Delete character<br>\n        <kbd>Esc</kbd> - Toggle detection<br>\n        <kbd>Ctrl/Cmd + D</kbd> - Toggle debug<br>\n        <kbd>Ctrl/Cmd + S</kbd> - Take snapshot\n    `\n    \n    helpDiv.addEventListener('mouseenter', () => {\n        helpDiv.style.opacity = '1'\n    })\n    \n    helpDiv.addEventListener('mouseleave', () => {\n        helpDiv.style.opacity = '0.7'\n    })\n    \n    document.body.appendChild(helpDiv)\n}\n\n// Start the application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', initApp)\n\n// Handle page visibility changes to pause/resume detection\ndocument.addEventListener('visibilitychange', () => {\n    if (window.handGestureApp) {\n        if (document.hidden) {\n            window.handGestureApp.pauseDetection()\n        } else {\n            window.handGestureApp.resumeDetection()\n        }\n    }\n})\n\n// Handle errors globally\nwindow.addEventListener('error', (event) => {\n    console.error('Global error:', event.error)\n    \n    if (window.handGestureApp) {\n        const statusElement = document.getElementById('status')\n        statusElement.textContent = `Runtime error: ${event.error.message}`\n        statusElement.className = 'status warning'\n    }\n})\n\n// Handle unhandled promise rejections\nwindow.addEventListener('unhandledrejection', (event) => {\n    console.error('Unhandled promise rejection:', event.reason)\n    \n    if (window.handGestureApp) {\n        const statusElement = document.getElementById('status')\n        statusElement.textContent = `Promise rejection: ${event.reason}`\n        statusElement.className = 'status warning'\n    }\n})\n"],"file":"assets/index-Ds3uh1gf.js"}